name: Cookie Monitoring and Renewal

on:
  # Run on schedule - every 4 hours
  schedule:
    - cron: '0 */4 * * *'
  
  # Allow manual trigger from GitHub Actions tab
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force refresh regardless of cookie expiration'
        default: 'false'
        required: false
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  check-and-refresh-cookies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Download previous cookies if they exist
        continue-on-error: true
        run: |
          if [ -f ".cookies-archive/captured-cookies.json" ]; then
            cp .cookies-archive/captured-cookies.json ./captured-cookies.json
          fi
      
      - name: Check cookie expiration
        id: check_expiry
        run: |
          if [ "${{ github.event.inputs.force_refresh }}" == "true" ]; then
            echo "REFRESH_NEEDED=true" >> $GITHUB_ENV
            echo "Cookie refresh forced manually"
          elif [ ! -f "captured-cookies.json" ]; then
            echo "REFRESH_NEEDED=true" >> $GITHUB_ENV
            echo "No cookie file found, capture required"
          else
            # Extract t_hash_t cookie expiration date
            COOKIE_EXPIRES=$(node -e "
              try {
                const fs = require('fs');
                const data = JSON.parse(fs.readFileSync('captured-cookies.json', 'utf8'));
                
                // Find cookie in the netfree2.cc domain
                let cookieFound = false;
                let expiry = null;
                
                // Search in both domain formats
                for (const domain of ['.netfree2.cc', 'netfree2.cc']) {
                  if (data.cookiesByDomain[domain]) {
                    const cookie = data.cookiesByDomain[domain].find(c => c.name === 't_hash_t');
                    if (cookie && cookie.expires && cookie.expires !== 'Session cookie (no expiration)') {
                      cookieFound = true;
                      expiry = new Date(cookie.expires).getTime();
                      break;
                    }
                  }
                }
                
                // Alternative search through all cookies
                if (!cookieFound) {
                  const cookie = data.allCookies.find(c => c.name === 't_hash_t' && c.expires);
                  if (cookie && cookie.expires && cookie.expires !== 'Session cookie (no expiration)') {
                    expiry = new Date(cookie.expires).getTime();
                    cookieFound = true;
                  }
                }
                
                if (!cookieFound) {
                  console.log('');
                } else {
                  console.log(expiry);
                }
              } catch (error) {
                console.log('');
              }
            ")
            
            if [ -z "$COOKIE_EXPIRES" ]; then
              echo "REFRESH_NEEDED=true" >> $GITHUB_ENV
              echo "Cookie t_hash_t not found or no expiration date, refresh needed"
            else
              # Get current time and add 30 minutes (1800000 milliseconds)
              CURRENT_TIME=$(node -e "console.log(Date.now() + 1800000)")
              
              # Compare expiry with current time + 30 minutes
              if [ $CURRENT_TIME -gt $COOKIE_EXPIRES ]; then
                echo "REFRESH_NEEDED=true" >> $GITHUB_ENV
                echo "Cookie t_hash_t will expire within 30 minutes, refresh needed"
              else
                echo "REFRESH_NEEDED=false" >> $GITHUB_ENV
                echo "Cookie t_hash_t still valid, no refresh needed"
              fi
            fi
          fi
      
      - name: Refresh cookies if needed
        if: env.REFRESH_NEEDED == 'true'
        run: node app.js
      
      - name: Create cookies archive directory
        run: mkdir -p .cookies-archive
      
      - name: Store cookies for future runs
        run: cp captured-cookies.json .cookies-archive/captured-cookies.json
      
      - name: Commit and push if cookies changed
        if: env.REFRESH_NEEDED == 'true'
        run: |
          git config --global user.name 'Cookie Refresh Bot'
          git config --global user.email 'bot@github.com'
          git add captured-cookies.json .cookies-archive/captured-cookies.json
          git diff --staged --quiet || (git commit -m "Update cookies - $(date -u +'%Y-%m-%d %H:%M:%S UTC')" && git push)